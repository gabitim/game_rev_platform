-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-11-29 00:49:02 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE game (
    game_id       NUMBER(6) NOT NULL,
    title         VARCHAR2(100) NOT NULL,
    description   VARCHAR2(400) NOT NULL,
    release_date  DATE NOT NULL,
    rating        NUMBER(2, 1) DEFAULT 1 NOT NULL,
    news_column   VARCHAR2(500)
);

ALTER TABLE game
    ADD CHECK ( length(title) >= 2 );

ALTER TABLE game
    ADD CONSTRAINT game_rating_ck CHECK ( rating BETWEEN 1 AND 5 );

ALTER TABLE game ADD CONSTRAINT game_pk PRIMARY KEY ( game_id );

CREATE TABLE gamesession (
    gamesession_id    NUMBER(5) NOT NULL,
    gamesessiontitle  VARCHAR2(30),
    gamesession_date  DATE NOT NULL,
    user_id           NUMBER(4) NOT NULL,
    game_id           NUMBER(3) NOT NULL
);

ALTER TABLE gamesession ADD CONSTRAINT gamesession_pk PRIMARY KEY ( gamesession_id );

CREATE TABLE genre (
    genre_id        NUMBER(2) NOT NULL,
    category_label  CHAR(2) NOT NULL,
    description     VARCHAR2(300)
);

ALTER TABLE genre ADD CONSTRAINT category_pk PRIMARY KEY ( genre_id );

ALTER TABLE genre ADD CONSTRAINT unique_category_label_ck UNIQUE ( category_label );

CREATE TABLE genregame (
    genre_id  NUMBER(5) NOT NULL,
    game_id   NUMBER(6) NOT NULL
);

ALTER TABLE genregame ADD CONSTRAINT categorygame_pk PRIMARY KEY ( genre_id,
                                                                   game_id );

CREATE TABLE groupp (
    group_id     NUMBER(2) NOT NULL,
    group_label  CHAR(1) DEFAULT 'T' NOT NULL,
    description  VARCHAR2(200)
);

ALTER TABLE groupp
    ADD CONSTRAINT grup_denumire_ck CHECK ( group_label IN ( 'D', 'F', 'H', 'J', 'K',
                                                             'L', 'O', 'S', 'T', 'Y' ) );

ALTER TABLE groupp ADD CONSTRAINT group_pk PRIMARY KEY ( group_id );

ALTER TABLE groupp ADD CONSTRAINT unique_group_label_ck UNIQUE ( group_label );

CREATE TABLE permission (
    permission_id           NUMBER(2) NOT NULL,
    permission_name         CHAR(2) DEFAULT 'P' NOT NULL,
    permission_description  VARCHAR2(100)
);

ALTER TABLE permission
    ADD CONSTRAINT permission_name_ck CHECK ( permission_name IN ( 'A', 'B', 'D1', 'D2', 'D3',
                                                                   'E', 'P', 'R' ) );

ALTER TABLE permission ADD CONSTRAINT permission_pk PRIMARY KEY ( permission_id );

ALTER TABLE permission ADD CONSTRAINT unique_permission_name_ck UNIQUE ( permission_name );

CREATE TABLE review (
    review_id   NUMBER(5) NOT NULL,
    title       VARCHAR2(100),
    text_field  VARCHAR2(500) NOT NULL,
    game_id     NUMBER(5) NOT NULL,
    user_id     NUMBER(6) NOT NULL,
    parent_id   NUMBER(5),
    posted_date  DATE NOT NULL
);

ALTER TABLE review ADD CONSTRAINT review_pk PRIMARY KEY ( review_id );

CREATE TABLE role (
    role_id      NUMBER(1) NOT NULL,
    role_label   CHAR(1) DEFAULT 'U' NOT NULL,
    description  VARCHAR2(200)
);

ALTER TABLE role
    ADD CONSTRAINT role_label_ck CHECK ( role_label IN ( 'A', 'M', 'U' ) );

ALTER TABLE role ADD CONSTRAINT role_pk PRIMARY KEY ( role_id );

ALTER TABLE role ADD CONSTRAINT unique_role_label_ck UNIQUE ( role_label );

CREATE TABLE rolepermission (
    role_id        NUMBER(1) NOT NULL,
    permission_id  NUMBER(2) NOT NULL
);

ALTER TABLE rolepermission ADD CONSTRAINT rolepermission_pkv1 PRIMARY KEY ( permission_id,
                                                                            role_id );

ALTER TABLE rolepermission ADD CONSTRAINT rolepermission_pk UNIQUE ( role_id,
                                                                     permission_id );

CREATE TABLE userr (
    user_id         NUMBER(4) NOT NULL,
    first_name      VARCHAR2(30) NOT NULL,
    last_name       VARCHAR2(30) NOT NULL,
    hashedpassword  VARCHAR2(50) NOT NULL,
    email           VARCHAR2(30) NOT NULL,
    join_date       DATE NOT NULL,
    group_id        NUMBER(2) NOT NULL,
    role_id         NUMBER(1) NOT NULL
);

ALTER TABLE userr
    ADD CHECK ( length(first_name) >= 2
                AND REGEXP_LIKE ( first_name,
                                  '[a-z]' ) );

ALTER TABLE userr
    ADD CHECK ( length(last_name) >= 2
                AND REGEXP_LIKE ( last_name,
                                  '[a-z]' ) );

ALTER TABLE userr
    ADD CHECK ( length(hashedpassword) >= 30 );

ALTER TABLE userr ADD CHECK ( REGEXP_LIKE ( email,
                                            '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE userr ADD CONSTRAINT user_pk PRIMARY KEY ( user_id );

ALTER TABLE userr ADD CONSTRAINT userr_email_un UNIQUE ( email );

ALTER TABLE genregame
    ADD CONSTRAINT game_genre_fk FOREIGN KEY ( game_id )
        REFERENCES game ( game_id );

ALTER TABLE review
    ADD CONSTRAINT game_review_fk FOREIGN KEY ( game_id )
        REFERENCES game ( game_id );

ALTER TABLE gamesession
    ADD CONSTRAINT game_user_fk FOREIGN KEY ( game_id )
        REFERENCES game ( game_id );

ALTER TABLE genregame
    ADD CONSTRAINT genre_game_fk FOREIGN KEY ( genre_id )
        REFERENCES genre ( genre_id );

ALTER TABLE userr
    ADD CONSTRAINT group_user_fk FOREIGN KEY ( group_id )
        REFERENCES groupp ( group_id );

ALTER TABLE rolepermission
    ADD CONSTRAINT permission_role_fk FOREIGN KEY ( permission_id )
        REFERENCES permission ( permission_id );

ALTER TABLE rolepermission
    ADD CONSTRAINT role_permission_fk FOREIGN KEY ( role_id )
        REFERENCES role ( role_id );

ALTER TABLE userr
    ADD CONSTRAINT role_user_fk FOREIGN KEY ( role_id )
        REFERENCES role ( role_id );

ALTER TABLE gamesession
    ADD CONSTRAINT user_game_fk FOREIGN KEY ( user_id )
        REFERENCES userr ( user_id );

ALTER TABLE review
    ADD CONSTRAINT user_review_fk FOREIGN KEY ( user_id )
        REFERENCES userr ( user_id );

CREATE SEQUENCE game_game_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER game_game_id_trg BEFORE
    INSERT ON game
    FOR EACH ROW
    WHEN ( new.game_id IS NULL )
BEGIN
    :new.game_id := game_game_id_seq.nextval;
END;
/

CREATE SEQUENCE gamesession_gamesession_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER gamesession_gamesession_id_trg BEFORE
    INSERT ON gamesession
    FOR EACH ROW
    WHEN ( new.gamesession_id IS NULL )
BEGIN
    :new.gamesession_id := gamesession_gamesession_id_seq.nextval;
END;
/

CREATE SEQUENCE review_review_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER review_review_id_trg BEFORE
    INSERT ON review
    FOR EACH ROW
    WHEN ( new.review_id IS NULL )
BEGIN
    :new.review_id := review_review_id_seq.nextval;
END;
/

CREATE SEQUENCE userr_user_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER userr_user_id_trg BEFORE
    INSERT ON userr
    FOR EACH ROW
    WHEN ( new.user_id IS NULL )
BEGIN
    :new.user_id := userr_user_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             36
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
